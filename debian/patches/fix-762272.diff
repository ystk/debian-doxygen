From: Dimitri van Heesch <dimitri@stack.nl>
Subject: Debian Bug 762272: segfault with cyclic subgroups
Bug-Debian: https://bugs.debian.org/762272
Last-Modified: 2014-11-02
Origin: https://github.com/doxygen/doxygen/commits/c83db38ea83499be19d9ff242bfa22ae534ee80c

Index: doxygen/src/groupdef.cpp
===================================================================
--- doxygen.orig/src/groupdef.cpp	2014-11-02 14:15:33.000000000 +0100
+++ doxygen/src/groupdef.cpp	2014-11-02 14:15:33.000000000 +0100
@@ -510,7 +510,31 @@
 
 bool GroupDef::containsGroup(const GroupDef *def)
 {
-    return this==def || groupList->find(def) >= 0;
+  if (this==def)
+  {
+    return TRUE;
+  }
+  else if (groupList->find(def)>=0)
+  {
+    return TRUE;
+  }
+  else // look for subgroups as well
+  {
+    GroupList *groups = partOfGroups();
+    if (groups)
+    {
+      GroupListIterator it(*groups);
+      GroupDef *gd;
+      for (;(gd=it.current());++it)
+      {
+        if (gd->containsGroup(def))
+        {
+          return TRUE;
+        }
+      }
+    }
+  }
+  return FALSE;
 }
 
 void GroupDef::addGroup(const GroupDef *def)
@@ -1229,16 +1253,23 @@
   for (;(g=gli.current());++gli)
   {
     GroupDef *gd=0;
-    if (!g->groupname.isEmpty() && (gd=Doxygen::groupSDict->find(g->groupname)) &&
-	!gd->containsGroup(subGroup) )
-    {
-      gd->addGroup(subGroup);
-      subGroup->makePartOfGroup(gd);
-    }
-    else if (gd==subGroup)
+    if (!g->groupname.isEmpty() && (gd=Doxygen::groupSDict->find(g->groupname)))
     {
-      warn(root->fileName,root->startLine,"Trying to add group %s to itself!",
-          gd->name().data());
+      if (gd==subGroup)
+      {
+        warn(root->fileName,root->startLine,"Refusing to add group %s to itself",
+            gd->name().data());
+      }
+      else if (gd->containsGroup(subGroup))
+      {
+        warn(root->fileName,root->startLine,"Refusing to add group %s to group %s, since the latter is already a "
+                                            "subgroup of the former\n", subGroup->name().data(),gd->name().data());
+      }
+      else
+      {
+        gd->addGroup(subGroup);
+        subGroup->makePartOfGroup(gd);
+      }
     }
   }
 }
